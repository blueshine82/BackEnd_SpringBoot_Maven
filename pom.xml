<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion> <!-- POM model 의 버전 -->
	<parent> <!-- 프로젝트의 계층 정보 -->
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.admin</groupId> <!-- 프로젝트를 생성하는 조직의 고유 아이디를 결정한다. 일반적으로 도메인 이름을 거꾸로 적는다 -->
	<artifactId>newpdfprd</artifactId> <!--  프로젝트 빌드시 파일 대표이름이다. groupId 내에서 유일해야 한다. Maven을 이용하여 빌드시 다음과 같은 규칙으로 파일이 생성된다.
	                                         artifactid-version.packaging. 위 예의 경우 빌드할 경우 newpdfprd-0.0.1-SNAPSHOT.jar 파일이 생성된다. -->
	<version>0.0.1-SNAPSHOT</version> <!--  프로젝트의 현재 버전, 프로젝트 개발 중일 때는 SNAPSHOT을 접미사로 사용 -->
	<packaging>jar</packaging>        <!-- 패키징 유형(jar, war, ear 등) --> 
	<name>newpdfprd</name> <!--  프로젝트, 프로젝트 이름 -->
	<description>NEW PDF ADMIN 3.0 PRD Maven Project for Spring Boot</description> <!--  프로젝트에 대한 간략한 설명 -->
	<url>http://cmtool-dev.ebay.co.kr/</url> <!-- 프로젝트에 대한 참고 Reference 사이트 (여기서는 AS-IS 프로젝트) -->
	<properties>
	<!--  버전관리시 용이 하다. ex) 하단에 자바 버전을 선언하고 dependencies에서 다음과 같이 활용가능하다.
	<version>${java.version}</version> -->
		<java.version>1.8</java.version>
	</properties>
	<dependencies> <!-- dependencies 태그 안에는 프로젝트와 의존 관계에 있는 라이브러리들을 관리 한다. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- chchoi.2022.10.13.add.start -->
		<!-- spring-boot-starter-web 에는 tomcat 이 포함되어 있지만, JSP 엔진은 포함하고 있지 않는다. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- lombok 라이브러리 추가 start -->
		<dependency>
	      <groupId>org.projectlombok</groupId>
	      <artifactId>lombok</artifactId>
	    </dependency>
	    <!-- lombok 라이브러리 추가 end -->
		
		<!-- spring-boot-starter-web 에는 tomcat 이 포함되어 있지만, JSP 엔진은 포함하고 있지 않고, jasper, jstl을 아래와 같이 의존성에 추가해야 JSP파일의 구동이 가능하다. -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
		        
		<!-- jstl 라이브러리 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- 스프링 부트는 스프링 프로젝트와 다르게, 동적 파일들의 파일 변경을 자동으로 반영하지 않으므로, jsp 파일 서버 재시작 없이 바로 적용하는 코드 추가. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		
		<!-- Thymeleaf Dependency 추가. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		
		<!-- Spring Boot JDBC 연결설정 DB 종속성 아닌 공통 부분 START
		     HikariCP라는 DBCP(DataBase Connection Pool)가 해당 Dependency에 들어가있어 매우 중요합니다. DBCP는 중요하고 기본적인 내용입니다. 없어도 에러는 발생하지만 꼭 필요하여 추가하였습니다.
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		<!-- Spring Boot JDBC 연결설정 DB 종속성 아닌 공통 부분 END -->
		
		<!-- Spring Boot JDBC 연결설정 MariaDB 부분 START -->
		<!-- MariaDB
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		    <version>3.0.6</version>
		</dependency>
		 -->
		<!-- Spring Boot JDBC 연결설정 MariaDB 부분 End -->
		
		<!-- Spring Boot JDBC 연결설정 MYSQL 부분 START -->
		<!-- mysql
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <version>8.0.22</version>
		</dependency>
		-->
		<!-- Spring Boot JDBC 연결설정 MYSQL 부분 END -->
		
		<!-- Spring Boot JDBC 연결설정 MSSQL 부분 START 
		     MSSQL 데이터베이스를 연동하게 해주는 Dependency 입니다.
		     -->
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Spring Boot JDBC 연결설정 MSSQL 부분 END -->
		
		<!-- Spring Boot MYBATIS 연결설정 부분 START -->
		
		<dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>2.0.3</version>
        </dependency>
        
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.5.3</version>
        </dependency>
        
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.1</version>
        </dependency>
        
		<!-- <dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.2.2</version>
		</dependency> -->
		<!-- Spring Boot MYBATIS 연결설정 부분 END -->
		
		<!-- chchoi.2022.10.13.add.end -->
		
	</dependencies>

	<build> <!-- 빌드에 사용할 플러그인 목록 -->
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
